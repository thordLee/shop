저번시간 숙제만 해보고 지나갈 것이기 때문에 

잘 했으면 응용사항만 보고 지나갑시다. 

 

 

 

 

내가 코드짜는 법을 모른다면

 

이런 기능만들라고 하면 코드 어떻게 짜야할지 모르겠다는 분들은

리액트를 못하는게 아니라 프로그래밍하는 법을 모를 뿐입니다. 

잠깐 설명하자면 "컴퓨터라는 노예에게 명령내리는 행위"를 프로그래밍이라고 합니다.

그리고 컴퓨터는 코드만 알아듣기 때문에 자바스크립트로 명령내리면 됩니다. 

 

 



 

근데 안타깝게도 컴퓨터는 지능이란게 없어서

"최근 본 상품 기능좀 만들어줘" 

이렇게 대충 명령하면 절대 못알아듣습니다.

 

 

 



 

5살짜리 애한테 설명하듯이 

1. 누가 Detail 페이지 접속하면 

2. 상품번호 가져와서

3. localStorage에 우선 array 형식으로 보관하고.. 

이런 식으로 하나하나 상세히 설명해야 명령을 수행합니다. 컴퓨터는 빡통이라그럼 

 

그래서 저렇게 상세히 설명을 한글로 적어놓고

그걸 그대로 자바스크립트 문법으로 옮기기는게 프로그래밍입니다. 

그래서 코드부터 짜는게 아니라 컴퓨터에게 어떤걸 시킬지 한글부터 쭉 상세히 적고 번역하면 됩니다.

 

 

Q. 코딩고수들 강의 보면 코딩할 때 한글 그런거 안적는데요?

A. 머릿속으로 함

 

아무튼 프로그래밍 하는 법을 알아야 코드짤 수 있습니다.

한글은 짜겠는데 코드로 번역을 못하겠다고요?

그건 자바스크립트 기초를 이상한데서 배워서 그럼 

 

 

 

 

 

 

 

저번시간 숙제는

 

1. 누가 Detail페이지 접속하면 

2. 현재 페이지에 보이는 상품id 가져와서

3. localStorage에 watch항목에 있던 [ ] 에 추가

라고 한글로 짜놓고 그대로 JS로 번역을 해봅시다. 

 

 

(Detail.js)

useEffect(()=>{
  console.log(찾은상품.id)
}, [])
1번 2번은 이렇게 하면 되겠군요. 

Detail.js 아무데나 useEffect() 하나 집어넣으면 1번 번역 끝이고

2번은 아마 예전에 let 찾은상품 이런거 만들어둔 적이 있을겁니다 

그거 쓰면 현재 페이지의 상품번호도 잘 출력가능합니다.

2번 번역 끝 

 

3번 localStorage에 watch항목에 추가는 

localStorage에 있던 기존 데이터를 수정하고 그런건 불가능하다고 했습니다.

입력/출력밖에 안됩니다. 

 

그래서 watch에 있던 [ ] 빼서 

찾은상품.id를 추가하고

다시 watch 항목으로 저장하는 식으로 코드짜면 됩니다.

localStorage 수정할 때 이렇게 하라고 저번시간에 배운듯

 

 

 

 

(Detail.js)

useEffect(()=>{
  let 꺼낸거 = localStorage.getItem('watched')
  꺼낸거 = JSON.parse(꺼낸거)
  꺼낸거.push(찾은상품.id)
  localStorage.setItem('watched', JSON.stringify(꺼낸거))
}, [])
그래서 watched에 있던 [ ] 꺼내서

찾은상품.id 추가하고

다시 watched 이름으로 집어넣으라고 했습니다. 

3번 번역 끝 

 

근데 같은 상품페이지 계속 접속하면 

똑같은 상품id가 계속 추가되는 현상이 발생하는군요. 

 

 

 

 

 

 

 

 

중복제거하기

 

그런 버그같은건 여러분이 한글을 대충적어놔서 생기는 것입니다.

한글을 아주 상세히 정확히 짜면 이론상 버그가 절대없음 

 

"상품id가 이미 [ ]에 있으면 추가하지 말아주세요" 라고 추가만 하면 될 것 같은데 

자바스크립트 기초를 잘 배운 분들은 딱봐도 if 대충 쓰면 되는구나 각이 나올텐데

if 이런거 쓰기 귀찮으면 Set 자료형 쓰면 됩니다.

Set은 array와 똑같은데 중복을 알아서 제거해주는 array입니다. 

그리고 array <-> Set 변환도 쉬워서 

array -> Set -> array 이런 식으로 쓰면 array에서 중복제거를 좀 쉽게 할 수 있습니다. 

 

 

 

(Detail.js)

useEffect(()=>{
  let 꺼낸거 = localStorage.getItem('watched')
  꺼낸거 = JSON.parse(꺼낸거)
  꺼낸거.push(찾은상품.id)

  //Set으로 바꿨다가 다시 array로 만들기
  꺼낸거 = new Set(꺼낸거)
  꺼낸거 = Array.from(꺼낸거)
  localStorage.setItem('watched', JSON.stringify(꺼낸거))
}, [])
그래서 Set으로 바꿨다가 다시 array로 변환해봤습니다. 

구글찾아보니 new Set(array자료) 하면 array를 Set으로 바꿀 수 있고

Array.from(Set자료) 하면 Set을 array로 바꿀 수 있다는군요. 

 

아무튼 이제 상세페이지 접속할 때 마다 localStorage에 상품번호들이 중복없이 잘 추가됩니다. 

이제 심심하면 메인페이지 이런데다가 UI 하나 만들고

그 안에 최근 본 상품 id를 진열해주거나 그래봅시다.

상품id만 진열하면 안이쁠테니 상품id가지고 실제 상품명이나 이미지나 그런걸 진열해보는 것도 좋겠군요. 

 

 

 

 

 

 

localStorage에 state를 자동저장되게 만들고 싶으면

 

직접 코드짜도 되긴 하는데 

redux-persist 이런 라이브러리 설치해서 쓰면 redux store 안에 있는 state를 자동으로 localStorage에 저장해줍니다.

state 변경될 때마다 그에 맞게 localStorage 업데이트도 알아서 해줌 

하지만 셋팅문법 복잡하고 귀찮습니다. 

 

그래서 요즘은 신규 사이트들은 Redux 대신 Jotai, Zustand 같은 라이브러리를 사용합니다. 

같은 기능을 제공하는데 셋팅도 거의 필요없고 문법이 훨씬 더 쉬우니까요.

그리고 그런 라이브러리들도 아마 localStorage 자동저장기능들이 있습니다. 

 

물론 빨리 취업하려면 리덕스 떡칠된 포트폴리오 만들어서 보여주면 됩니다.

 

 

 

 

 

 

응용사항

 

지금은 사이트 새로고침시 localStorage에 있던 항목도 싹 [] 이렇게 비워집니다.

왜냐면 App컴포넌트 로드시 [] 이거 새로 넣으라고 코드짰으니까요.

이게 싫으면

이미 localStorage에 watched 항목이 있으면 [] 이거 새로 넣지 말라고 코드를 짜봅시다.
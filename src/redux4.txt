오늘의 숙제 :

1. + 버튼을 누르면 해당 상품의 수량부분이 +1 되는 기능을 만들어옵시다.

2. 상세페이지 주문하기 버튼을 누르면 새로운 상품이 state에 추가되는 기능을 만들어옵시다.

 

약간의 힌트
 

1번은 이렇게 코드짜면 쉬울텐데

"0번째 버튼을 누르면 state의 0번째 상품을 +1 해주세요~"

"1번째 버튼을 누르면 state의 1번째 상품을 +1 해주세요~"

그러면 됩니다. 

 

근데 나중에 Cart페이지에 있는 상품들 정렬 순서같은게 바뀌거나 그럴 경우

store의 state는 정렬순서가 그대로라면 약간 이상한 일이 일어날 수도 있겠군요.

그래서 "버튼을 누르면 옆에 있는 상품id와 동일한 상품id 가진걸 state에서 찾은 다음에 그걸 +1" 

하라고 하면 좀 정확할듯요 

 

Q. 전 array에서 원하는 항목 찾는 방법을 모르는데요

A. 모르는건 생각해본다고 나오지 않습니다 

 

2번은 그냥 state에 새로운 { } 하나 추가하면 그게 상품추가기능 끝입니다. 

 

[collapse]
 

 

 

 

 

store에 저장된 state가 array, object 자료인 경우 state 변경을 좀 쉽게 편리하게 할 수 있는데

오늘은 그 방법을 알아봅시다. 

 

 

 

 

 

 

redux state가 array/object인 경우 변경하려면 

 

대충 {name : 'kim', age : 20} 이렇게 생긴 자료를 state로 만들어봅시다. 

근데 저기서 'kim' -> 'park' 이렇게 변경하고 싶으면 state 변경함수 어떻게 만들어야할까요? 

 

 

let user = createSlice({
  name : 'user',
  initialState : {name : 'kim', age : 20},
  reducers : {
    changeName(state){
      return {name : 'park', age : 20}
    }
  }
}) 
당연히 저렇게 쓰면 changeName() 사용시 변경됩니다.

return 오른쪽에 적은걸로 기존 state를 갈아치워주니까요. 

 

 

 

let user = createSlice({
  name : 'user',
  initialState : {name : 'kim', age : 20},
  reducers : {
    changeName(state){
      state.name = 'park'
    }
  }
}) 
근데 state를 직접 수정하라고해도 변경 잘 됩니다. 

state를 직접 수정하는 문법을 사용해도 잘 변경되는 이유는

Immer.js 라이브러리가 state 사본을 하나 더 생성해준 덕분인데 Redux 설치하면 딸려와서 그렇습니다.

 

그래서 결론은 array/object 자료의 경우 state변경은

state를 직접 수정해버려도 잘 되니까 직접 수정하십시오. 

 

(참고) 그래서 state 만들 때 문자나 숫자하나만 필요해도

redux에선 일부러 object 아니면 array에 담는 경우도 있습니다. 

수정이 편리해지니까요. 

 

 

 

 

 

 

 

간단한 퀴즈시간

 

사이트 아무데나 버튼 하나만 만들어봅시다.

그 버튼을 누르면 위에 있는 state 중에 age 항목이 +1 되어야합니다. 

어떻게 만들면 될까요? 

 

공짜답 좋아하면 머리가 빠집니다
 

let user = createSlice({
  name : 'user',
  initialState : {name : 'kim', age : 20},
  reducers : {
    increase(state){
      state.age += 1
    }
  }
}) 
이렇게 increase라는 함수 만들고

export 하고 

필요한 곳에서 import 해서 dispatch(increase()) 하면 +1 됩니다. 

 

 

[collapse]
 

 

 

 

 

 

 

state 변경함수가 여러개 필요하면

 

방금 퀴즈에서 +1 하는 기능을 만들어봤는데 

가끔은 +10 하고 가끔은 +100 하고싶으면 어떻게 하죠?

+10 하는 함수만들고 

+100 하는 함수만들고

그렇게 여러개를 미리 만들어놔도 되는데 

근데 함수는 파라미터문법 이용하면 비슷한 함수 여러개 만들 필요가 없다고 했습니다. 

state변경함수에도 파라미터문법 사용가능함 

 

 

 

 

 

let user = createSlice({
  name : 'user',
  initialState : {name : 'kim', age : 20},
  reducers : {
    increase(state, a){
      state.age += a.payload
    }
  }
}) 
state변경함수의 둘째 파라미터를 작명하면 이제 

increase(10)

increase(100)

이런 식으로 파라미터입력을 해서 함수사용이 가능합니다.

파라미터자리에 넣은 자료들은 a.payload 하면 나옵니다.

 

그래서 위처럼 코드 작성해놓으면

increase(10) 이거 실행하면 +10 됩니다.

increase(100) 이거 실행하면 +100 됩니다. 

여기서도 파라미터문법 이용하면 비슷한 함수들은 여러개 만들 필요없습니다. 

진짜 잘되는지 확인하려면 가져다가 써봅시다.

 

 

 

(참고)

- a 말고 action 이런 식으로 작명 많이 합니다. 

- action.type 하면 state변경함수 이름이 나오고

- action.payload 하면 파라미터가 나옵니다. 

 

 

 

 

 

 

파일 분할은

 

코드가 길어서 보기싫으면 코드 덩어리들을 다른 파일로 빼면 됩니다. 

그래서 강의에선 let user 변수와 state변경함수 export 부분을

store폴더/userSlice.js로 빼봤습니다.

import export 문법 배웠으면 알아서 잘할 수 있겠군요. 